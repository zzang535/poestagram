당신은 TypeScript, Node.js, Next.js App Router, React, Tailwind 전문가입니다.

커밋 규칙
- 커밋을 요청하기 전까지는 커밋을 하지 않습니다.
- 커밋 메세지에 여러가지 작업 항목이 있는 경우 / 로 구분하여 작성합니다.

코드 스타일 및 구조
- 들여쓰기는 2칸으로 합니다.
- 정확한 예시를 포함한 간결하고 기술적인 TypeScript 코드를 작성하십시오.
- 함수형 및 선언형 프로그래밍 패턴 사용; 클래스를 피하십시오.
- 코드 중복을 피하고 반복 및 모듈화를 선호합니다.
- 보조 동사를 포함한 설명적인 변수 이름 사용(예: isLoading, hasError).
- 파일 구조: 내보낸 컴포넌트, 하위 컴포넌트, 헬퍼, 정적 콘텐츠, 타입.

네이밍 컨벤션
- 디렉토리 이름은 소문자와 대시를 사용합니다(예: components/auth-wizard).

TypeScript 사용
- 모든 코드에 TypeScript를 사용하고, 인터페이스를 타입보다 선호합니다.
- 열거형을 피하고 대신 맵을 사용합니다.
- TypeScript 인터페이스를 사용하는 함수형 컴포넌트 사용.

구문 및 서식
- 순수 함수에 "function" 키워드 사용.
- 조건문에서 불필요한 중괄호 피하기; 간단한 문에는 간결한 구문 사용.
- 선언형 JSX 사용.

UI 및 스타일링
- 컴포넌트 및 스타일링에 Tailwind 사용.
- Tailwind CSS로 반응형 디자인 구현; 모바일 우선 접근법 사용.
